1- set up a header file of the struct that you will pass to the excecution so that you start working the same time and merge without problems
2- set up a deadline for you to merge an mvp (a minimal version so that you can test to work on bugs)
3- try keeping the execution start from a single function Ex:"ft_execute"
4- don't debug with each other or discuss the details of your parts, work on your parts each one like his own project independently
5- create a shared github repo so that each one can push to his branch
6- draw a roadmap for your parts, meaning : from the starting point to the end of each part of yours, draw a path of the excecution of your code EX:
	1. read the line
	2. split-it by ...
	3. check for ... (if * free all and return to read line)
	4. create the struct
	5. expand
	6. fill the cmds structs
	...
	final. free the struct

7- after that create your header files, and list all the function your will need based on the roadmap, just the prototype and it's purpose of existance like you are given it to somebody working for you not yourself EX:
	// this function execute only the built ins
	// void	ft_exec_built-in(single cmd struct)
8- then start creating and coding each function like you work for youself
9- after creating each function start testing it seperately, test every case that can ruin your function more like a function in libft, cuz debuging the whole program is hell, 
but testing every function with any kind of input will save you some time and make it unbreakable, take it <STEP BY STEP> it makes every thing work properly
10- last thing good luck and good bye